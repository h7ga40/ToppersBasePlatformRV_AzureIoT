# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

###############################################################################
# Boiler-plate

# cross-platform directory manipulation
ifeq ($(shell echo $$OS),$$OS)
    MAKEDIR = if not exist "$(1)" mkdir "$(1)"
    RM = rmdir /S /Q "$(1)"
else
    MAKEDIR = '$(SHELL)' -c "mkdir -p \"$(1)\""
    RM = '$(SHELL)' -c "rm -rf \"$(1)\""
endif

OBJDIR := Debug
# Move to the build directory
ifeq (,$(filter $(OBJDIR),$(notdir $(CURDIR))))
.SUFFIXES:
mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
MAKETARGET = '$(MAKE)' --no-print-directory -C $(OBJDIR) -f '$(mkfile_path)' \
		'SRCDIR=$(CURDIR)' $(MAKECMDGOALS)
.PHONY: $(OBJDIR) clean
all:
	+@$(call MAKEDIR,$(OBJDIR))
	+@$(MAKETARGET)
$(OBJDIR): all
Makefile : ;
% :: $(OBJDIR) ; :
clean :
	$(call RM,$(OBJDIR))

else

# trick rules into thinking we are in the root, when we are in the bulid dir
VPATH = ../../zlib-1.2.11

# Boiler-plate
###############################################################################
# Project settings

PROJECT := zlib


# Project settings
###############################################################################
# Objects and Paths

OBJECTS += src/adler32.o
OBJECTS += src/compress.o
OBJECTS += src/crc32.o
OBJECTS += src/deflate.o
#OBJECTS += src/gzclose.o
#OBJECTS += src/gzlib.o
#OBJECTS += src/gzread.o
#OBJECTS += src/gzwrite.o
OBJECTS += src/infback.o
OBJECTS += src/inffast.o
OBJECTS += src/inflate.o
OBJECTS += src/inftrees.o
OBJECTS += src/trees.o
OBJECTS += src/uncompr.o
OBJECTS += src/zutil.o

INCLUDE_PATHS += -I../../asp_baseplatform
INCLUDE_PATHS += -I../../asp_baseplatform/include
INCLUDE_PATHS += -I../../asp_baseplatform/arch
INCLUDE_PATHS += -I../../asp_baseplatform/arch/riscv_gcc
INCLUDE_PATHS += -I../../asp_baseplatform/target/k210_gcc
INCLUDE_PATHS += -I../../asp_baseplatform/OBJ/K210_GCC/DEMO
INCLUDE_PATHS += -I../../asp_baseplatform/monitor
INCLUDE_PATHS += -I../../asp_baseplatform/files

# Objects and Paths
###############################################################################
# Tools and Flags

AS      = riscv-none-embed-gcc
CC      = riscv-none-embed-gcc
CPP     = riscv-none-embed-g++
AR      = riscv-none-embed-ar
RANLIB  = riscv-none-embed-ranlib


C_FLAGS += -std=gnu11
C_FLAGS += -march=rv64imafdc
C_FLAGS += -mabi=lp64d
C_FLAGS += -mcmodel=medany
C_FLAGS += -O2
C_FLAGS += -fmessage-length=0
C_FLAGS += -fsigned-char
C_FLAGS += -ffunction-sections
C_FLAGS += -fdata-sections
C_FLAGS += -Wall
C_FLAGS += -Wextra
C_FLAGS += -Wno-unused-parameter
C_FLAGS += -Wno-missing-field-initializers
C_FLAGS += -Wnull-dereference

C_FLAGS += -g3
C_FLAGS += -Wstack-usage=256

CXX_FLAGS += -std=gnu++11
CXX_FLAGS += -std=gnu11
CXX_FLAGS += -march=rv64imafdc
CXX_FLAGS += -mabi=lp64d
CXX_FLAGS += -mcmodel=medany
CXX_FLAGS += -O2
CXX_FLAGS += -fmessage-length=0
CXX_FLAGS += -fsigned-char
CXX_FLAGS += -ffunction-sections
CXX_FLAGS += -fdata-sections
CXX_FLAGS += -Wall
CXX_FLAGS += -Wextra
CXX_FLAGS += -Wno-unused-parameter
CXX_FLAGS += -Wno-missing-field-initializers
CXX_FLAGS += -Wnull-dereference

CXX_FLAGS += -g3
CXX_FLAGS += -Wstack-usage=256

ASM_FLAGS += -x
ASM_FLAGS += assembler-with-cpp
ASM_FLAGS += -march=rv64imafdc
ASM_FLAGS += -mabi=lp64d
ASM_FLAGS += -mcmodel=medany
ASM_FLAGS += -O2
ASM_FLAGS += -fmessage-length=0
ASM_FLAGS += -fsigned-char
ASM_FLAGS += -ffunction-sections
ASM_FLAGS += -fdata-sections
ASM_FLAGS += -Wall
ASM_FLAGS += -Wextra
ASM_FLAGS += -Wno-unused-parameter
ASM_FLAGS += -Wno-missing-field-initializers
ASM_FLAGS += -Wnull-dereference
ASM_FLAGS += -g3
ASM_FLAGS += -Wstack-usage=256


# Tools and Flags
###############################################################################
# Rules

.PHONY: all lst size


all: lib$(PROJECT).a


.s.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
	@$(AS) -c $(ASM_FLAGS) -o $@ $<

.S.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
	@$(AS) -c $(ASM_FLAGS) -o $@ $<

.c.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CC) $(C_FLAGS) $(INCLUDE_PATHS) -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"

.cpp.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CPP) $(CXX_FLAGS) $(INCLUDE_PATHS) -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -c -o "$@" "$<"

lib$(PROJECT).a: $(OBJECTS)
	rm -f lib$(PROJECT).a
	$(AR) -rcs lib$(PROJECT).a $(OBJECTS)
	$(RANLIB) lib$(PROJECT).a

# Rules
###############################################################################
# Dependencies

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)
endif

# Dependencies
###############################################################################
